<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2022-10-20T16:09:58+03:30</updated><id>http://localhost:4000/feed.xml</id><title type="html">HUE</title><subtitle>I have created this blog to document my Electrical Engineering and Artificial Intelligence/Machine Learning journey. I mainly write about Deep Learning, Computer Vision/Image processing, Pytorch, OpenCV, Python, Microcontrollers (STM32, STM8, Arduino) and C/C++</subtitle><author><name>hue-salari</name></author><entry><title type="html">اجرای کدهای python در لینوکس با استفاده از systemd</title><link href="http://localhost:4000/autorun-a-python-script-using-systemd/" rel="alternate" type="text/html" title="اجرای کدهای python در لینوکس با استفاده از systemd" /><published>2020-05-29T05:07:00+04:30</published><updated>2020-05-29T05:07:00+04:30</updated><id>http://localhost:4000/autorun-a-python-script-using-systemd</id><content type="html" xml:base="http://localhost:4000/autorun-a-python-script-using-systemd/"><![CDATA[<p>صوت مساله بسیار ساده‌ست، ما کد pythonمون رو نوشتیم، تست کردیم، حالا می‌خوایم بذاریمش یک گوشه به شکل دائم اجرا شه.<br />
حداقل خواستمون اینه که:</p>

<ol>
  <li>موقع روشن شدن سیستم کد به شکل خودکار اجرا شه</li>
  <li>اگر در هر صورت خطایی رخ داد که باعث کرش کردن برنامه شد به شکل خودکار کدمون مجددا راه اندازی شده</li>
</ol>

<p>در بین همه‌ی گزینه‌های ممکن برای انجام این کار systemd راحت‌ترین و سرراست ترین راه رسیدن به خواسته‌های بالاست و کیه که ندونه من چقدر تنبلی رو دوست دارم!</p>

<h2 id="ایجاد-یک-برنامهی-نمونه">ایجاد یک برنامه‌ی نمونه:</h2>

<p>اول یک برنامه ساده درست کنیم که صرفا یک متن رو در یک حلقه‌ی بینهایت هر یک دقیقه یک بار در انتهای یک فایل اضافه کنه:</p>

<figure class="highlight"><pre><code class="language-python" data-lang="python"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
</pre></td><td class="code"><pre><span class="c1">#!/usr/bin/python
</span><span class="kn">from</span> <span class="nn">time</span> <span class="kn">import</span> <span class="n">sleep</span>

<span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">"__main__"</span><span class="p">:</span>
    <span class="n">n</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="k">while</span> <span class="bp">True</span><span class="p">:</span>
        <span class="n">n</span> <span class="o">+=</span> <span class="mi">1</span>
        <span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="s">"/dos/codes/systemd_demo.txt"</span><span class="p">,</span> <span class="s">"a"</span><span class="p">)</span> <span class="k">as</span> <span class="nb">file</span><span class="p">:</span>
            <span class="c1"># get further user input/do stuff here
</span>            <span class="nb">file</span><span class="p">.</span><span class="n">write</span><span class="p">(</span><span class="sa">f</span><span class="s">"</span><span class="si">{</span><span class="n">n</span><span class="si">}</span><span class="s"> mississippi</span><span class="se">\n</span><span class="s">"</span><span class="p">)</span>
        <span class="n">sleep</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</pre></td></tr></tbody></table></code></pre></figure>

<p>این برنامه رو به اسم systemd_demo.py ذخیره می‌کنیم.</p>

<p>اگر کد برنامه رو اجرا کنیم یک فایل به اسم systemd_demo.txt ایجاد خواهد شد:</p>

<p><img src="/assets/post-images/linux/autorun-a-python-script-using-systemd/systemd_tail.png" alt="systemd tail" /></p>

<p>دقت کنید که برای اجرای این کد از آدرس کامل محیط آناکوندام و آدرس فایلم استفاده کردم، در مرحله‌ی بعد به این آدرس کامل احتیاج داریم.</p>

<p><span style="color:red">هشدار:</span>. حتما یک بار توی ترمینال آدرس کامل رو بزنید و برنامه رو اجرا کنید، به خاطر ساختار import کردن ماژول‌ها و … در python ممکنه کد شما وقتی این شکلی اونو فرا می‌خونی با مشکل مواجه شه.</p>

<h2 id="ایجاد-فایل-service">ایجاد فایل service:</h2>

<p>با ویرایشگر دلخواهتون یک فایل با اسم مورد نظر خودتون (که مرتبط با اسم برنامه‌ای شما باشه) در آدرس /lib/systemd/system/ و با پسوند
service. ایجاد کنید.</p>

<p>من از ویرایشگر nano استفاده می‌کنم، اگر nano رو نصب دارید کافیه در دستور زیر جای YOUR_SERVICE_NAME اسم مورد نظر خودتون رو بذارید.</p>

<p> </p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nb">sudo </span>nano /lib/systemd/system/YOUR_SERVICE_NAME.service</code></pre></figure>

<p> </p>

<p>ساختار کلی‌ای که برای ایجاد یک service لازم داریم به شکل زیره:</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
</pre></td><td class="code"><pre><span class="o">[</span>Unit]
<span class="nv">Description</span><span class="o">=</span>YOUR SERVICE DESCRIPTION FOR HUMANS
<span class="nv">After</span><span class="o">=</span>multi-user.target
<span class="nv">Conflicts</span><span class="o">=</span>getty@tty1.service

<span class="o">[</span>Service]
<span class="nv">Type</span><span class="o">=</span>simple
<span class="nv">ExecStart</span><span class="o">=</span>YOUR PYTHON CODE EXECUTE COMMAND
<span class="nv">StandardInput</span><span class="o">=</span>tty-force
<span class="nv">RemainAfterExit</span><span class="o">=</span><span class="nb">yes
</span><span class="nv">Restart</span><span class="o">=</span>on-failure
<span class="nv">RestartSec</span><span class="o">=</span>5s

<span class="o">[</span>Install]
<span class="nv">WantedBy</span><span class="o">=</span>multi-user.target
</pre></td></tr></tbody></table></code></pre></figure>

<p>در ساختار بالا:</p>

<ul>
  <li>بجای YOUR SERVICE DESCRIPTION FOR HUMANS توضیحات مرتبط با اینکه این کد/سرویس چی هست رو می‌نویسیم.</li>
  <li>بجای YOUR PYTHON CODE EXECUTE COMMAND دستور اجرای فایل خودمون وارد می‌کنیم.</li>
  <li>اگر می‌خوایم بعد از اتمام حلقه‌ی اصلی برنامه python اون service فعال بمونه مقدار RemainAfterExit رو برابر yes قرار می‌دیم.</li>
  <li>همچنین پارامتر RestartSec مقدار تاخیر هنگام اجرای مجدد کدمون رو مشخص می‌کنه.</li>
</ul>

<p>ساختار فایل بالا رو من برای انجام برنامه‌ی مثال این پست به شکل زیر ویرایش کردم:</p>

<p><img src="/assets/post-images/linux/autorun-a-python-script-using-systemd/systemd_demo_service-1.png" alt="systemd demo service-1" /></p>

<h2 id="فعال-سازی-و-اجرای-service">فعال سازی و اجرای service:</h2>

<p>هر بار که ما در آدرس /lib/systemd/system/ فایلی می‌سازیم و یا در اون فایل‌ها تغییری ایجاد می‌کنیم نیازه تا systemctl رو راه اندازی مجدد کنیم تا تغییراتمون اعمال بشن، این کار با دستور زیر انجام می‌شه:</p>

<p> </p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nb">sudo </span>systemctl daemon-reload</code></pre></figure>

<p> 
حال با دستورات زیر می‌تونیم serviceای که ایجاد کردیم رو مدیریت کنیم:</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
</pre></td><td class="code"><pre><span class="c">#To enable running service</span>
<span class="nb">sudo </span>systemctl <span class="nb">enable </span>YOUR_SERVICE_NAME.service

<span class="c">#To stop running service</span>
<span class="nb">sudo </span>systemctl stop YOUR_SERVICE_NAME.service

<span class="c">#To start running service</span>
<span class="nb">sudo </span>systemctl start YOUR_SERVICE_NAME.service

<span class="c">#To restart running service</span>
<span class="nb">sudo </span>systemctl restart YOUR_SERVICE_NAME.service
</pre></td></tr></tbody></table></code></pre></figure>

<p>اگر همه‌چیز به خوبی پیش رفته باشه چنین خروجی‌ای خواهید دید و دیتا شروع می‌کنه وارد فایل systemd_demo.txt شدن.</p>

<p><img src="/assets/post-images/linux/autorun-a-python-script-using-systemd/sysemd_status.png" alt="sysemd status" /></p>

<h2 id="منابع">منابع:</h2>

<div dir="ltr">

<a href="https://singlebrook.com/2017/10/23/auto-restart-crashed-service-systemd/">Auto-recovery of crashed services with systemd</a><br />
<a href="https://tecadmin.net/setup-autorun-python-script-using-systemd/">How To Setup Autorun a Python Script Using Systemd</a><br />
<a href="https://github.com/torfsen/python-systemd-tutorial">Writing a systemd Service in Python</a><br />
<a href="https://stackoverflow.com/questions/44136655/why-standardinput-tty-in-oneshot-systemd-unit-files">https://stackoverflow.com/questions/44136655/why-standardinput-tty-in-oneshot-systemd-unit-files</a><br />

</div>]]></content><author><name>Hue Salari</name></author><category term="Linux" /><category term="Python" /><category term="Linux" /><summary type="html"><![CDATA[آموزش اجرای اتوماتیک کدهای python هنگام روشن شدن سیستم با استفاده از systemd در لینوکس و اجرای مجدد اسکریپ python در صورت بروز خطا]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/post-images/linux/autorun-a-python-script-using-systemd/python_systemd.png" /><media:content medium="image" url="http://localhost:4000/assets/post-images/linux/autorun-a-python-script-using-systemd/python_systemd.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">دستورات کاربردی بعد از نصب اوبونتو</title><link href="http://localhost:4000/ubuntu-essentials/" rel="alternate" type="text/html" title="دستورات کاربردی بعد از نصب اوبونتو" /><published>2018-01-18T14:19:59+03:30</published><updated>2018-01-18T14:19:59+03:30</updated><id>http://localhost:4000/ubuntu-essentials</id><content type="html" xml:base="http://localhost:4000/ubuntu-essentials/"><![CDATA[<p>من توی لینوکس تازه کارم و خیلی پیش میاد که می‌زنم همه‌چیز رو آجر می‌کنم و مجبور می‌شم کل سیستم عامل رو از اول نصب کنم، برای راحت‌تر شدن زندگیم کارهایی که بعد از نصب سیستم‌عامل جدید انجام می‌دم رو اینجا نوشته‌ام.</p>

<h2 id="git-رو-نصب-کنیم">Git رو نصب کنیم:</h2>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="code"><pre><span class="nb">sudo</span> apt update
<span class="nb">sudo</span> apt upgrade
<span class="nb">sudo</span> apt install git
</pre></td></tr></tbody></table></code></pre></figure>

<p>تنظیمات اولیه گیت رو انجام بدیم:</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
</pre></td><td class="code"><pre>git config <span class="nt">--global</span> user.name <span class="s2">"your name"</span>
git config <span class="nt">--global</span> user.email <span class="s2">"your@email.com"</span>
</pre></td></tr></tbody></table></code></pre></figure>

<h2 id="zsh-رو-نصب-کنیم">zsh رو نصب کنیم:</h2>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
</pre></td><td class="code"><pre><span class="nb">sudo </span>apt <span class="nb">install </span>zsh
</pre></td></tr></tbody></table></code></pre></figure>

<p>فعالش کنیم:</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
</pre></td><td class="code"><pre><span class="nb">sudo </span>usermod <span class="nt">-s</span> /user/bin/zsh <span class="k">${</span><span class="nv">USER</span><span class="k">}</span>
</pre></td></tr></tbody></table></code></pre></figure>

<p>تنظیمات «اوه مای زیشل» رو نصب کنیم:</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
</pre></td><td class="code"><pre>sh <span class="nt">-c</span> <span class="s2">"</span><span class="si">$(</span>wget https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh <span class="nt">-O</span> -<span class="si">)</span><span class="s2">"</span>
</pre></td></tr></tbody></table></code></pre></figure>

<p>zsh رو به فایل ترمینال‌هامون اضافه کنیم:</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
</pre></td><td class="code"><pre><span class="nb">command</span> <span class="nt">-v</span> zsh | <span class="nb">sudo tee</span> <span class="nt">-a</span> /etc/shells
</pre></td></tr></tbody></table></code></pre></figure>

<p>ترمینال پیشفرض رو zsh کنیم:</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
</pre></td><td class="code"><pre><span class="nb">sudo </span>chsh <span class="nt">-s</span> <span class="s2">"</span><span class="si">$(</span><span class="nb">command</span> <span class="nt">-v</span> zsh<span class="si">)</span><span class="s2">"</span> <span class="s2">"</span><span class="k">${</span><span class="nv">USER</span><span class="k">}</span><span class="s2">"</span>
</pre></td></tr></tbody></table></code></pre></figure>

<h2 id="ویدئو-پلیر-کله-قندی-رو-نصب-کنیم">ویدئو پلیر کله قندی رو نصب کنیم:</h2>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
</pre></td><td class="code"><pre><span class="nb">sudo </span>apt <span class="nb">install </span>vlc
</pre></td></tr></tbody></table></code></pre></figure>

<h2 id="دانلود-منیجر-uget-رو-نصب-کنیم">دانلود منیجر <em>uGet</em> رو نصب کنیم:</h2>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="code"><pre><span class="nb">sudo </span>add-apt-repository ppa:plushuang-tw/uget-stable
<span class="nb">sudo </span>apt update
<span class="nb">sudo </span>apt <span class="nb">install </span>uget
</pre></td></tr></tbody></table></code></pre></figure>

<h2 id="برای-انجام--شخصی-سازی-gnome-tweaks-رو-نصب-کنیم">برای انجام  شخصی سازی <em>(GNOME) Tweaks</em> رو نصب کنیم:</h2>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
</pre></td><td class="code"><pre><span class="nb">sudo </span>apt <span class="nb">install </span>gnome-tweak-tool
</pre></td></tr></tbody></table></code></pre></figure>

<h2 id="برای-گرفتن-اسکرین-شات-از-صفحه-shutter-رو-نصب-کنیم">برای گرفتن اسکرین شات از صفحه <em>shutter</em> رو نصب کنیم:</h2>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
</pre></td><td class="code"><pre><span class="nb">sudo </span>apt-repository ppa:linuxuprising/shutter
<span class="nb">sudo </span>apt <span class="nb">install </span>shutter
</pre></td></tr></tbody></table></code></pre></figure>]]></content><author><name>Hue Salari</name></author><category term="Linux" /><category term="Linux" /><summary type="html"><![CDATA[مجموعه دستورات کاربردی بعد از نصب اوبونتو]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/post-images/linux/ubuntu-essentials/ubuntu_essentials.png" /><media:content medium="image" url="http://localhost:4000/assets/post-images/linux/ubuntu-essentials/ubuntu_essentials.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">ایجاد شماره‌ی شناسایی منحصر به فرد در میکروکنترلرهای STM32</title><link href="http://localhost:4000/stm32-id/" rel="alternate" type="text/html" title="ایجاد شماره‌ی شناسایی منحصر به فرد در میکروکنترلرهای STM32" /><published>2017-09-05T00:00:00+04:30</published><updated>2017-09-05T00:00:00+04:30</updated><id>http://localhost:4000/stm32-id</id><content type="html" xml:base="http://localhost:4000/stm32-id/"><![CDATA[<p>در میکروکنترلرهای STM32، شرکت ST هنگام ساخت هر قطعه یک ID با طول ۹۶ بیت رو به عنوان شماره‌ی منحصر به فرد داخل حافظه‌ی میکروکنترلر ذخیره میکنه تا هنگام انجام تست‌های کنترلر کیفت پردازنده‌ها بتونه بفهمه که اون قطعه از کجا اومده و از کدوم ویفر ساخته شده.
پس راحت‌ترین راه داشتن ID منحصر به فرد در میکروکنترلرهای STM32 اینه که ID ایجاد شده توسط شرکت ST رو بخونیم.</p>

<p>Unique ID ذخیره شده در میکروکنترل‌های STM32 از سه بخش زیر تشکیل شده:</p>

<ul>
  <li>مختصات X و Y روی ویفر که به شکل BCD ذخیره شده.</li>
  <li>یک عدد بسیار بزرگ.</li>
  <li>شماره‌ی ویفر.</li>
</ul>

<p>آدرس ذخیره این ID در هر خانواده‌ از پردازنده‌های ST متفاوته و مطابق جدول زیر است:</p>

<style type="text/css">
.tg  {border-collapse:collapse;border-spacing:0;margin:0px auto;}
.tg td{border-color:black;border-style:solid;border-width:1px;font-family:Arial, sans-serif;font-size:14px;
  overflow:hidden;padding:10px 5px;word-break:normal;}
.tg th{border-color:black;border-style:solid;border-width:1px;font-family:Arial, sans-serif;font-size:14px;
  font-weight:normal;overflow:hidden;padding:10px 5px;word-break:normal;}
.tg .tg-baqh{text-align:center;vertical-align:top}
.tg .tg-qssw{background-color:#E47600;text-align:left;vertical-align:top}
.tg-wrap {direction: ltr;}
@media screen and (max-width: 767px) {.tg {width: auto !important;}.tg col {width: auto !important;}.tg-wrap {overflow-x: auto;-webkit-overflow-scrolling: touch;margin: auto 0px;}}</style>

<div class="tg-wrap"><table class="tg" style="undefined;table-layout: fixed; width: 213px">
<colgroup>
<col style="width: 86.25px" />
<col style="width: 126.25px" />
</colgroup>
<thead>
  <tr>
    <th class="tg-qssw">Device line</th>
    <th class="tg-qssw">Starting address</th>
  </tr>
</thead>
<tbody>
  <tr>
    <td class="tg-baqh">F0, F3</td>
    <td class="tg-baqh">0x1FFFF7AC</td>
  </tr>
  <tr>
    <td class="tg-baqh">F1</td>
    <td class="tg-baqh">0x1FFFF7E8</td>
  </tr>
  <tr>
    <td class="tg-baqh">F2, F4</td>
    <td class="tg-baqh">0x1FFF7A10</td>
  </tr>
  <tr>
    <td class="tg-baqh">F7</td>
    <td class="tg-baqh">0x1FF0F420</td>
  </tr>
  <tr>
    <td class="tg-baqh">L0</td>
    <td class="tg-baqh">0x1FF80050</td>
  </tr>
  <tr>
    <td class="tg-baqh">L0, L1,<br />Cat.1, Cat.2</td>
    <td class="tg-baqh">0x1FF80050</td>
  </tr>
</tbody>
</table></div>

<p>با توجه به ۳۲ بیتی بودن حافظه‌ی میکروکنترلرهای STM32 می‌شه با استفاده از اشاره‌گرهای نوع (unsigned long (32bit به این ۹۶ بیت دیتا دسترسی پیدا کرد، به عنوان مثال برای پردازنده‌ی STM32f103 از کد زیر استفاده می‌کنیم:</p>

<figure class="highlight"><pre><code class="language-c" data-lang="c"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
</pre></td><td class="code"><pre><span class="kt">uint32_t</span> <span class="n">id</span><span class="p">[</span><span class="mi">3</span><span class="p">];</span>

<span class="n">id</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span> <span class="o">=</span> <span class="o">*</span><span class="p">((</span><span class="kt">unsigned</span> <span class="kt">long</span> <span class="o">*</span><span class="p">)</span> <span class="mh">0x1FFFF7E8</span><span class="p">);</span>
<span class="n">id</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="o">*</span><span class="p">((</span><span class="kt">unsigned</span> <span class="kt">long</span> <span class="o">*</span><span class="p">)</span> <span class="mh">0x1FFFF7EC</span><span class="p">);</span>
<span class="n">id</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="o">*</span><span class="p">((</span><span class="kt">unsigned</span> <span class="kt">long</span> <span class="o">*</span><span class="p">)</span> <span class="mh">0x1FFFF7F0</span><span class="p">);</span>
</pre></td></tr></tbody></table></code></pre></figure>]]></content><author><name>Hue Salari</name></author><category term="STM32" /><category term="STM32" /><summary type="html"><![CDATA[استفاده از اطلاعات ذخیره شده در حافظه‌ی میکروکنترلرهای خانواده‌ی STM32 جهت دستیابی به یک شماره شناسایی منحصر به فرد]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/post-images/stm32/stm32-id/stm32-unique-id.jpg" /><media:content medium="image" url="http://localhost:4000/assets/post-images/stm32/stm32-id/stm32-unique-id.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry></feed>